#include <iostream>
#include <string>
using namespace std;

int main(){
	
	// Variables
	float GPU_MHz, CPU_MHz, CPU_Cores, Choice, Multiplier, Performance;
	string Resolution, numComputers;
	string Program = "Computer Hardware Graphics Quality Recommendation Tool";
	
	cout << "How many computers are being processed? ";
   	cin >> numComputers;
   	if(numComputers < 1)
   	{
   		cout << "Value should not be less than 1. Please try again.\n";
   	}
   } while(numComputers < 1);
    
	while(numComputers > 0)
}
	// Clock Speed of GPU (Step 1)
cout << "Please enter the clock speed (in Megahertz) of your Graphics Card: ";
cin >> GPU_MHz; 
	
	// Clock Speed of CPU (Step 2)
cout << "Please enter the clock speed (in Megahertz) of your Processor: ";
cin >> CPU_MHz;

	// Number of Cores of CPU (Step 3)
cout << "Please enter the number of cores your Processor has: ";
cin >> CPU_Cores;


	// Monitor Resolution / Menu Prompt (Step 4)
cout << "What is your monitor resolution?" << endl;
cout << "1. 1280 x 720"<<endl;
cout << "2. 1920 x 1080"<<endl;
cout << "3. 2560 x 1440"<<endl;
cout << "4. 3840 x 2160"<<endl;
cout << "Please select from the options above:";
cin >> Choice;


	// Multiplier Value (Step 5)
/*check options and store value into resoltuion and Multiplier*/
if(Choice==1){
Resolution = "1280X720";
Multiplier=1;
}

else if(Choice==2){
Resolution = "1920x1080";
Multiplier=0.75;
}

else if(Choice==3){
Resolution = "2560x1440";
Multiplier=0.55; 
}

else if(Choice==4){
Resolution = "3840x2160";
Multiplier=0.35;
}
  
	// Calculate Performance Score (Step 6)
Performance=((5*GPU_MHz)+(CPU_Cores*CPU_MHz))*Multiplier;

// Determine Recommended graphics quality (Step 7)
/*make object of string for store Quality of Computer Graphics*/

string Quality;
if(Performance>17000){
Quality="Ultra";
}

else if(Performance>15000 && Performance<=17000){
Quality="High";
}

else if(Performance>13000 && Performance<=15000){
Quality="Medium";
}

else if(Performance>11000 && Performance<=13000){
Quality="Low";
}

else if(Performance<=11000){
Quality="Unable to Play";
}	
	
	

	
	
	// Display
cout << endl << endl << Program << endl;
cout << "GPU Clock Speed: " << GPU_MHz << " MHz" << endl;
cout << "CPU Clock Speed: " << CPU_MHz << " MHz" << endl;
cout << "Number of Cores: " << CPU_Cores << endl;
cout << "Monitor Resolution: " << Resolution << endl;
cout << "Performance Score: " << Performance << endl;
cout << "Recommendation Graphics Quality: " << Quality << endl;


   	if(Performance  > highPerf) highPerf = Performance Score;
   	if(Performance  < lowPerf) lowPerf = Performance ;
  
   	cout<<"Computer Hardware Graphics Quality Tool \n\n";
   	cout<<"GPU clock speed:"<<clkspGPU<<endl;
   	cout<<"CPU clock speed:"<<clkspCPU<<endl;
   	cout<<"Number of cores:"<<numCores<<endl;
   	string reso;
      
   	if (choice==1)
   	{
   		reso="1280 x 720";
   	}
   	else if (choice==2)
   	{
   		reso="1920 x 1080";
   	}
   	else if (choice==3)
   	{
   		reso="2560 x 1440";
   	}
   	else if (choice==4)
   	{
   		reso="3840 x 2160";
   	}
   	else
   	{
   		cout<<"Error in entry\n";
   	}
  
   	cout<<"Monitor Resolution:"<<reso<<endl;
   	cout<<"Performance Score:"<<Perf_Score<<endl;
      
   	numComputers--;
   }
  
   //Here the cout will Display the highest and lowest performance score
   
   cout << endl;
   cout << "The highest performance score was = " << highPerf << endl;
   cout << "The lowest performance score was = " << lowPerf << endl;
  
   return 0;
}


return 0;

}
